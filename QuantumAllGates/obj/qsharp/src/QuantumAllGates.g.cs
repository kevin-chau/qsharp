//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"QuantumAllGates\",\"Name\":\"main\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":6,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"QuantumAllGates\",\"Name\":\"main\"},\"Attributes\":[],\"SourceFile\":\"/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"Documentation\":[]}")]
#line hidden
namespace QuantumAllGates
{
    [SourceLocation("/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs", OperationFunctor.Body, 8, -1)]
    public partial class main : Operation<QVoid, Int64>, ICallable
    {
        public main(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "main";
        String ICallable.FullName => "QuantumAllGates.main";
        public static EntryPointInfo<QVoid, Int64> Info => new EntryPointInfo<QVoid, Int64>(typeof(main));
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__X
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Y
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__Z
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__T
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__S
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rx
        {
            get;
            set;
        }

        protected ICallable<QVoid, Double> Microsoft__Quantum__Math__PI
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Ry
        {
            get;
            set;
        }

        protected IUnitary<(Double,Qubit)> Microsoft__Quantum__Intrinsic__Rz
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit,Qubit)> CCNOT__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        public override Func<QVoid, Int64> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 9 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                var q = Allocate__.Apply(3L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 11 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__X.Apply(q[0L]);
#line 12 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__Y.Apply(q[0L]);
#line 13 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__Z.Apply(q[0L]);
#line 14 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q[0L]);
#line 15 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__T.Apply(q[0L]);
#line 16 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__S.Apply(q[0L]);
#line 17 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__Rx.Apply((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance), q[0L]));
#line 18 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__Ry.Apply((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance), q[0L]));
#line 19 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__Rz.Apply((Microsoft__Quantum__Math__PI.Apply(QVoid.Instance), q[0L]));
#line 21 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    Microsoft__Quantum__Intrinsic__CNOT.Apply((q[0L], q[1L]));
#line 22 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    CCNOT__.Apply((q[0L], q[1L], q[2L]));
#line 24 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    ResetAll__.Apply(q);
#line 26 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumAllGates/QuantumAllGates.qs"
                    return 0L;
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__X = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.X));
            this.Microsoft__Quantum__Intrinsic__Y = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Y));
            this.Microsoft__Quantum__Intrinsic__Z = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.Z));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__T = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.T));
            this.Microsoft__Quantum__Intrinsic__S = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.S));
            this.Microsoft__Quantum__Intrinsic__Rx = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rx));
            this.Microsoft__Quantum__Math__PI = this.__Factory__.Get<ICallable<QVoid, Double>>(typeof(global::Microsoft.Quantum.Math.PI));
            this.Microsoft__Quantum__Intrinsic__Ry = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Ry));
            this.Microsoft__Quantum__Intrinsic__Rz = this.__Factory__.Get<IUnitary<(Double,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.Rz));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
            this.CCNOT__ = this.__Factory__.Get<IUnitary<(Qubit,Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CCNOT));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__)
        {
            return __m__.Run<main, QVoid, Int64>(QVoid.Instance);
        }
    }
}
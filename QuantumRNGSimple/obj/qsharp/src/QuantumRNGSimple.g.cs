//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"ComputationalMindset.QuantumExperiments\",\"Name\":\"RandomNumberGenerator\"},\"Attributes\":[],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":32}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"ComputationalMindset.QuantumExperiments\",\"Name\":\"RandomNumberGenerator\"},\"Attributes\":[],\"SourceFile\":\"/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs\",\"Position\":{\"Item1\":7,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":32}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"ComputationalMindset.QuantumExperiments\",\"Name\":\"Main\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Core\",\"Name\":\"EntryPoint\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":12}}]},\"Argument\":{\"Item1\":{\"Case\":\"UnitValue\"},\"Item2\":[],\"Item3\":{\"Case\":\"UnitType\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":12},\"Item2\":{\"Line\":1,\"Column\":14}}]}},\"Offset\":{\"Item1\":24,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"ComputationalMindset.QuantumExperiments\",\"Name\":\"Main\"},\"Attributes\":[],\"SourceFile\":\"/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs\",\"Position\":{\"Item1\":25,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":15}},\"Documentation\":[]}")]
#line hidden
namespace ComputationalMindset.QuantumExperiments
{
    [SourceLocation("/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs", OperationFunctor.Body, 8, 26)]
    public partial class RandomNumberGenerator : Operation<QVoid, Int64>, ICallable
    {
        public RandomNumberGenerator(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "RandomNumberGenerator";
        String ICallable.FullName => "ComputationalMindset.QuantumExperiments.RandomNumberGenerator";
        protected Allocate Allocate__
        {
            get;
            set;
        }

        protected Release Release__
        {
            get;
            set;
        }

        protected IUnitary<Qubit> Microsoft__Quantum__Intrinsic__H
        {
            get;
            set;
        }

        protected ICallable<Qubit, Result> Microsoft__Quantum__Intrinsic__M
        {
            get;
            set;
        }

        protected ICallable<IQArray<Qubit>, QVoid> ResetAll__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, Int64> Microsoft__Quantum__Convert__ResultArrayAsInt
        {
            get;
            set;
        }

        public override Func<QVoid, Int64> __Body__ => (__in__) =>
        {
#line hidden
            {
#line 10 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                var q = Allocate__.Apply(5L);
#line hidden
                bool __arg1__ = true;
                try
                {
#line 12 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q[0L]);
#line 13 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q[1L]);
#line 14 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q[2L]);
#line 15 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q[3L]);
#line 16 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    Microsoft__Quantum__Intrinsic__H.Apply(q[4L]);
#line 18 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    var result = (IQArray<Result>)new QArray<Result>(Microsoft__Quantum__Intrinsic__M.Apply(q[0L]), Microsoft__Quantum__Intrinsic__M.Apply(q[1L]), Microsoft__Quantum__Intrinsic__M.Apply(q[2L]), Microsoft__Quantum__Intrinsic__M.Apply(q[3L]), Microsoft__Quantum__Intrinsic__M.Apply(q[4L]));
#line 20 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    ResetAll__.Apply(q);
#line 21 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
                    return Microsoft__Quantum__Convert__ResultArrayAsInt.Apply(result);
                }
#line hidden
                catch
                {
                    __arg1__ = false;
                    throw;
                }
#line hidden
                finally
                {
                    if (__arg1__)
                    {
#line hidden
                        Release__.Apply(q);
                    }
                }
            }
        }

        ;
        public override void __Init__()
        {
            this.Allocate__ = this.__Factory__.Get<Allocate>(typeof(global::Microsoft.Quantum.Intrinsic.Allocate));
            this.Release__ = this.__Factory__.Get<Release>(typeof(global::Microsoft.Quantum.Intrinsic.Release));
            this.Microsoft__Quantum__Intrinsic__H = this.__Factory__.Get<IUnitary<Qubit>>(typeof(global::Microsoft.Quantum.Intrinsic.H));
            this.Microsoft__Quantum__Intrinsic__M = this.__Factory__.Get<ICallable<Qubit, Result>>(typeof(global::Microsoft.Quantum.Intrinsic.M));
            this.ResetAll__ = this.__Factory__.Get<ICallable<IQArray<Qubit>, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.ResetAll));
            this.Microsoft__Quantum__Convert__ResultArrayAsInt = this.__Factory__.Get<ICallable<IQArray<Result>, Int64>>(typeof(global::Microsoft.Quantum.Convert.ResultArrayAsInt));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__)
        {
            return __m__.Run<RandomNumberGenerator, QVoid, Int64>(QVoid.Instance);
        }
    }

    [SourceLocation("/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs", OperationFunctor.Body, 26, -1)]
    public partial class Main : Operation<QVoid, Int64>, ICallable
    {
        public Main(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "Main";
        String ICallable.FullName => "ComputationalMindset.QuantumExperiments.Main";
        public static EntryPointInfo<QVoid, Int64> Info => new EntryPointInfo<QVoid, Int64>(typeof(Main));
        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        protected ICallable<QVoid, Int64> RandomNumberGenerator__
        {
            get;
            set;
        }

        public override Func<QVoid, Int64> __Body__ => (__in__) =>
        {
#line 27 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
            Message__.Apply("Generating a random 5-bit number: ");
#line 28 "/Users/kevinchau/EECS/EECS254/Project/qsharpcode/QuantumRNGSimple/QuantumRNGSimple.qs"
            return RandomNumberGenerator__.Apply(QVoid.Instance);
        }

        ;
        public override void __Init__()
        {
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
            this.RandomNumberGenerator__ = this.__Factory__.Get<ICallable<QVoid, Int64>>(typeof(RandomNumberGenerator));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__)
        {
            return __m__.Run<Main, QVoid, Int64>(QVoid.Instance);
        }
    }
}